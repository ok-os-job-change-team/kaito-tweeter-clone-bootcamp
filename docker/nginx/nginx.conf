# nginxユーザーを設定
user  nginx;
# 実行プロセス数を設定
worker_processes  2;

# エラーログ設定
error_log  /var/log/nginx/error.log warn;
# マスタープロセスのPIDファイルのパス
pid        /var/run/nginx.pid;

events {
	# 最大コネクション数
    worker_connections  1024;
}

http {
    # MIMEタイプの設定
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # アクセスログの設定
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # sendfile() APIを使うかを設定
    sendfile        on;

    # キープアライブのタイムアウト秒数
    keepalive_timeout  65;

    # unicornへのリクエストをUnixドメインソケット経由で転送
    upstream unicorn {
         server unix:/var/tmp/unicorn.sock;
    }

    # 仮想サーバー設定
    server{
		# ポート設定
        listen       80;

        #====ローカル/デプロイのアドレス切り替え===
        server_name localhost;
        # server_name  3.114.158.47;
        #====================================

        location / {
			proxy_pass        http://unicorn; # リクエストをunicornサーバーに転送
			proxy_set_header  Host $host; # リクエストヘッダーのHostフィールドにクライアントが送信したホスト名を含める
			proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for; # リクエストヘッダーにクライアントのIPアドレスを含める
			proxy_set_header  X-Forwarded-Proto $scheme; # リクエストヘッダーにクライアントが使用したプロトコルを含める
			proxy_set_header  X-Forwarded-Ssl off; # (本番環境でSSLを使う場合はonにする)リクエストヘッダーにSSLを使用しているかどうかを示すヘッダーを追加する
			proxy_set_header  X-Forwarded-Port $server_port; # リクエストヘッダーにクライアントが使用したポート番号を含める
			proxy_set_header  X-Forwarded-Host $host; # リクエストヘッダーのX-Forwarded-Hostフィールドに、クライアントが送信したホスト名を含める
        }

        # 50xのHTTPエラーコードが発生した場合に、リクエストを/50x.htmlにリダイレクトさせる
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
