name: EC2 auto deploy

# ワークフローをトリガーするイベント
on:
  # mainブランチへのマージ                     
  pull_request:
    # branches: [ main ]
    # types: [closed]

  # 手動実行
  workflow_dispatch:

jobs:
 build:
    runs-on: ubuntu-latest            # GitHubが提供しているホストランナーを設定
    timeout-minutes: 10               # jobを実行する最長時間の設定[min]

    steps:
    # IP取得ライブラリをインストール(https://github.com/haythem/public-ip)
    - name: Public IP Install
      id: ip
      uses: haythem/public-ip@v1.3

    # ブランチをチェックアウト(https://github.com/actions/checkout)
    - name: Checkout
      uses: actions/checkout@v4

    # AWS CLIをインストールする(https://docs.aws.amazon.com/ja_jp/cli/latest/userguide/getting-started-install.html)
    - name: AWS CLI install
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
        aws --version

    # AWS CLIにキーを設定をする
    - name: AWS set Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # デプロイする
    - name: Deploy
      run: |

        # SSHのセキュリティグループを開放する
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

        # SSH接続用の秘密鍵を準備
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key

        # ファイルの所有者に読み取り&書き込み権限を付与
        chmod 600 private_key

        # SSH接続
        ssh -oStrictHostKeyChecking=no -i private_key ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST_NAME }}

        # gitコマンド
        cd kaito-twitter-clone-bootcamp && git fetch --prune && git pull origin setup-ec2-auto-deploy

        # SSHのセキュリティグループを閉じる
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
